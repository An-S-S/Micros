
Laboratorio_06_UART.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000be  00800100  00000830  000008c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000830  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000021  008001be  008001be  00000982  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000982  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000009e0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00000a20  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000009c1  00000000  00000000  00000a78  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000075e  00000000  00000000  00001439  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003a3  00000000  00000000  00001b97  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000b0  00000000  00000000  00001f3c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000433  00000000  00000000  00001fec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000019a  00000000  00000000  0000241f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  000025b9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 e3       	ldi	r30, 0x30	; 48
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ae 3b       	cpi	r26, 0xBE	; 190
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ae eb       	ldi	r26, 0xBE	; 190
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	af 3d       	cpi	r26, 0xDF	; 223
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 a6 00 	call	0x14c	; 0x14c <main>
  9e:	0c 94 16 04 	jmp	0x82c	; 0x82c <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <UART_Init>:
// Function prototypes

/****************************************/
// Main Function
void UART_Init(unsigned int ubrr) {
	UBRR0H = (ubrr >> 8);
  a6:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = ubrr;
  aa:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	UCSR0B = (1 << TXEN0) | (1 << RXEN0);
  ae:	88 e1       	ldi	r24, 0x18	; 24
  b0:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);
  b4:	86 e0       	ldi	r24, 0x06	; 6
  b6:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
  ba:	08 95       	ret

000000bc <UART_Transmit>:
}

void UART_Transmit(unsigned char data) {
	while (!(UCSR0A & (1 << UDRE0)));
  bc:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  c0:	95 ff       	sbrs	r25, 5
  c2:	fc cf       	rjmp	.-8      	; 0xbc <UART_Transmit>
	UDR0 = data;
  c4:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
  c8:	08 95       	ret

000000ca <UART_Receive>:
}

unsigned char UART_Receive(void) {
	while (!(UCSR0A & (1 << RXC0)));
  ca:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  ce:	88 23       	and	r24, r24
  d0:	e4 f7       	brge	.-8      	; 0xca <UART_Receive>
	return UDR0;
  d2:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
  d6:	08 95       	ret

000000d8 <cadena>:

void cadena(char txt[]) {
  d8:	cf 93       	push	r28
  da:	df 93       	push	r29
  dc:	ec 01       	movw	r28, r24
	while (*txt != '\0') {
  de:	03 c0       	rjmp	.+6      	; 0xe6 <cadena+0xe>
		UART_Transmit(*txt);
  e0:	0e 94 5e 00 	call	0xbc	; 0xbc <UART_Transmit>
		txt++;
  e4:	21 96       	adiw	r28, 0x01	; 1
	while (!(UCSR0A & (1 << RXC0)));
	return UDR0;
}

void cadena(char txt[]) {
	while (*txt != '\0') {
  e6:	88 81       	ld	r24, Y
  e8:	81 11       	cpse	r24, r1
  ea:	fa cf       	rjmp	.-12     	; 0xe0 <cadena+0x8>
		UART_Transmit(*txt);
		txt++;
	}
}
  ec:	df 91       	pop	r29
  ee:	cf 91       	pop	r28
  f0:	08 95       	ret

000000f2 <ADC_Init>:

void ADC_Init() {
	ADMUX = (1 << REFS0);
  f2:	80 e4       	ldi	r24, 0x40	; 64
  f4:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
	ADCSRA = (1 << ADEN) | (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0);
  f8:	87 e8       	ldi	r24, 0x87	; 135
  fa:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  fe:	08 95       	ret

00000100 <ADC_Read>:
}

uint16_t ADC_Read(uint8_t channel) {
	ADMUX = (ADMUX & 0xF0) | (channel & 0x0F);
 100:	ec e7       	ldi	r30, 0x7C	; 124
 102:	f0 e0       	ldi	r31, 0x00	; 0
 104:	90 81       	ld	r25, Z
 106:	90 7f       	andi	r25, 0xF0	; 240
 108:	8f 70       	andi	r24, 0x0F	; 15
 10a:	89 2b       	or	r24, r25
 10c:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADSC);
 10e:	ea e7       	ldi	r30, 0x7A	; 122
 110:	f0 e0       	ldi	r31, 0x00	; 0
 112:	80 81       	ld	r24, Z
 114:	80 64       	ori	r24, 0x40	; 64
 116:	80 83       	st	Z, r24
	while (ADCSRA & (1 << ADSC));
 118:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 11c:	86 fd       	sbrc	r24, 6
 11e:	fc cf       	rjmp	.-8      	; 0x118 <ADC_Read+0x18>
	return ADC;
 120:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 124:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
}
 128:	08 95       	ret

0000012a <Mostrar_Menu>:

void Mostrar_Menu() {
	cadena("\r\n==== MENU ====\r\n");
 12a:	80 e0       	ldi	r24, 0x00	; 0
 12c:	91 e0       	ldi	r25, 0x01	; 1
 12e:	0e 94 6c 00 	call	0xd8	; 0xd8 <cadena>
	cadena("1. Leer Potenciometro\r\n");
 132:	83 e1       	ldi	r24, 0x13	; 19
 134:	91 e0       	ldi	r25, 0x01	; 1
 136:	0e 94 6c 00 	call	0xd8	; 0xd8 <cadena>
	cadena("2. Enviar ASCII a LEDs\r\n");  // Opción actualizada
 13a:	8b e2       	ldi	r24, 0x2B	; 43
 13c:	91 e0       	ldi	r25, 0x01	; 1
 13e:	0e 94 6c 00 	call	0xd8	; 0xd8 <cadena>
	cadena("Elija opcion: ");
 142:	84 e4       	ldi	r24, 0x44	; 68
 144:	91 e0       	ldi	r25, 0x01	; 1
 146:	0e 94 6c 00 	call	0xd8	; 0xd8 <cadena>
 14a:	08 95       	ret

0000014c <main>:
}

int main(void) {
 14c:	cf 93       	push	r28
 14e:	df 93       	push	r29
 150:	cd b7       	in	r28, 0x3d	; 61
 152:	de b7       	in	r29, 0x3e	; 62
 154:	64 97       	sbiw	r28, 0x14	; 20
 156:	0f b6       	in	r0, 0x3f	; 63
 158:	f8 94       	cli
 15a:	de bf       	out	0x3e, r29	; 62
 15c:	0f be       	out	0x3f, r0	; 63
 15e:	cd bf       	out	0x3d, r28	; 61
	UART_Init(MYUBRR);
 160:	87 e6       	ldi	r24, 0x67	; 103
 162:	90 e0       	ldi	r25, 0x00	; 0
 164:	0e 94 53 00 	call	0xa6	; 0xa6 <UART_Init>
	ADC_Init();
 168:	0e 94 79 00 	call	0xf2	; 0xf2 <ADC_Init>
	DDRB = 0xFF;  // LEDs en Puerto B
 16c:	8f ef       	ldi	r24, 0xFF	; 255
 16e:	84 b9       	out	0x04, r24	; 4
	
	cadena("Sistema listo\r\n");
 170:	83 e5       	ldi	r24, 0x53	; 83
 172:	91 e0       	ldi	r25, 0x01	; 1
 174:	0e 94 6c 00 	call	0xd8	; 0xd8 <cadena>
	
	while(1) {
		Mostrar_Menu();
 178:	0e 94 95 00 	call	0x12a	; 0x12a <Mostrar_Menu>
		buffer_index = 0;
 17c:	10 92 be 01 	sts	0x01BE, r1	; 0x8001be <__data_end>
		
		// Limpiar buffer UART
		while (UCSR0A & (1 << RXC0)) { UDR0; }
 180:	02 c0       	rjmp	.+4      	; 0x186 <main+0x3a>
 182:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 186:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 18a:	88 23       	and	r24, r24
 18c:	d4 f3       	brlt	.-12     	; 0x182 <main+0x36>
		
		// Leer opción del usuario
		while(1) {
			char received = UART_Receive();
 18e:	0e 94 65 00 	call	0xca	; 0xca <UART_Receive>
			if (received == '\r' || received == '\n') {
 192:	8d 30       	cpi	r24, 0x0D	; 13
 194:	11 f0       	breq	.+4      	; 0x19a <main+0x4e>
 196:	8a 30       	cpi	r24, 0x0A	; 10
 198:	69 f4       	brne	.+26     	; 0x1b4 <main+0x68>
				received_buffer[buffer_index] = '\0';
 19a:	e0 91 be 01 	lds	r30, 0x01BE	; 0x8001be <__data_end>
 19e:	f0 e0       	ldi	r31, 0x00	; 0
 1a0:	e1 54       	subi	r30, 0x41	; 65
 1a2:	fe 4f       	sbci	r31, 0xFE	; 254
 1a4:	10 82       	st	Z, r1
				buffer_index++;
			}
		}
		
		// Procesar opción
		switch(received_buffer[0]) {
 1a6:	80 91 bf 01 	lds	r24, 0x01BF	; 0x8001bf <received_buffer>
 1aa:	81 33       	cpi	r24, 0x31	; 49
 1ac:	91 f0       	breq	.+36     	; 0x1d2 <main+0x86>
 1ae:	82 33       	cpi	r24, 0x32	; 50
 1b0:	61 f1       	breq	.+88     	; 0x20a <main+0xbe>
 1b2:	3f c0       	rjmp	.+126    	; 0x232 <main+0xe6>
			char received = UART_Receive();
			if (received == '\r' || received == '\n') {
				received_buffer[buffer_index] = '\0';
				break;
			}
			else if (buffer_index < BUFFER_SIZE - 1 && received >= ' ') {
 1b4:	90 91 be 01 	lds	r25, 0x01BE	; 0x8001be <__data_end>
 1b8:	9f 31       	cpi	r25, 0x1F	; 31
 1ba:	48 f7       	brcc	.-46     	; 0x18e <main+0x42>
 1bc:	80 32       	cpi	r24, 0x20	; 32
 1be:	38 f3       	brcs	.-50     	; 0x18e <main+0x42>
				received_buffer[buffer_index] = received;
 1c0:	e9 2f       	mov	r30, r25
 1c2:	f0 e0       	ldi	r31, 0x00	; 0
 1c4:	e1 54       	subi	r30, 0x41	; 65
 1c6:	fe 4f       	sbci	r31, 0xFE	; 254
 1c8:	80 83       	st	Z, r24
				buffer_index++;
 1ca:	9f 5f       	subi	r25, 0xFF	; 255
 1cc:	90 93 be 01 	sts	0x01BE, r25	; 0x8001be <__data_end>
 1d0:	de cf       	rjmp	.-68     	; 0x18e <main+0x42>
		}
		
		// Procesar opción
		switch(received_buffer[0]) {
			case '1': {
				uint16_t adc_valor = ADC_Read(0);
 1d2:	80 e0       	ldi	r24, 0x00	; 0
 1d4:	0e 94 80 00 	call	0x100	; 0x100 <ADC_Read>
				char buffer[20];
				snprintf(buffer, sizeof(buffer), "\r\nValor ADC: %04u\r\n", adc_valor);
 1d8:	9f 93       	push	r25
 1da:	8f 93       	push	r24
 1dc:	83 e6       	ldi	r24, 0x63	; 99
 1de:	91 e0       	ldi	r25, 0x01	; 1
 1e0:	9f 93       	push	r25
 1e2:	8f 93       	push	r24
 1e4:	1f 92       	push	r1
 1e6:	84 e1       	ldi	r24, 0x14	; 20
 1e8:	8f 93       	push	r24
 1ea:	8e 01       	movw	r16, r28
 1ec:	0f 5f       	subi	r16, 0xFF	; 255
 1ee:	1f 4f       	sbci	r17, 0xFF	; 255
 1f0:	1f 93       	push	r17
 1f2:	0f 93       	push	r16
 1f4:	0e 94 1e 01 	call	0x23c	; 0x23c <snprintf>
				cadena(buffer);
 1f8:	c8 01       	movw	r24, r16
 1fa:	0e 94 6c 00 	call	0xd8	; 0xd8 <cadena>
 1fe:	0f b6       	in	r0, 0x3f	; 63
 200:	f8 94       	cli
 202:	de bf       	out	0x3e, r29	; 62
 204:	0f be       	out	0x3f, r0	; 63
 206:	cd bf       	out	0x3d, r28	; 61
 208:	b7 cf       	rjmp	.-146    	; 0x178 <main+0x2c>
				break;
			}
			case '2': {
				cadena("\r\nEnvie un caracter ASCII: ");
 20a:	87 e7       	ldi	r24, 0x77	; 119
 20c:	91 e0       	ldi	r25, 0x01	; 1
 20e:	0e 94 6c 00 	call	0xd8	; 0xd8 <cadena>
				char ascii_char = UART_Receive();  // Espera el carácter
 212:	0e 94 65 00 	call	0xca	; 0xca <UART_Receive>
 216:	18 2f       	mov	r17, r24
				
				// Mostrar en LEDs y reenviar a Hyperterminal
				PORTB = ascii_char;  // LEDs muestran el ASCII
 218:	85 b9       	out	0x05, r24	; 5
				cadena("\r\nCaracter recibido: ");
 21a:	83 e9       	ldi	r24, 0x93	; 147
 21c:	91 e0       	ldi	r25, 0x01	; 1
 21e:	0e 94 6c 00 	call	0xd8	; 0xd8 <cadena>
				UART_Transmit(ascii_char);  // Eco del carácter
 222:	81 2f       	mov	r24, r17
 224:	0e 94 5e 00 	call	0xbc	; 0xbc <UART_Transmit>
				cadena("\r\n");
 228:	8b eb       	ldi	r24, 0xBB	; 187
 22a:	91 e0       	ldi	r25, 0x01	; 1
 22c:	0e 94 6c 00 	call	0xd8	; 0xd8 <cadena>
				break;
 230:	a3 cf       	rjmp	.-186    	; 0x178 <main+0x2c>
			}
			default:
			cadena("\r\nOpcion invalida!\r\n");
 232:	89 ea       	ldi	r24, 0xA9	; 169
 234:	91 e0       	ldi	r25, 0x01	; 1
 236:	0e 94 6c 00 	call	0xd8	; 0xd8 <cadena>
			break;
 23a:	9e cf       	rjmp	.-196    	; 0x178 <main+0x2c>

0000023c <snprintf>:
 23c:	ae e0       	ldi	r26, 0x0E	; 14
 23e:	b0 e0       	ldi	r27, 0x00	; 0
 240:	e4 e2       	ldi	r30, 0x24	; 36
 242:	f1 e0       	ldi	r31, 0x01	; 1
 244:	0c 94 ed 03 	jmp	0x7da	; 0x7da <__prologue_saves__+0x1c>
 248:	0d 89       	ldd	r16, Y+21	; 0x15
 24a:	1e 89       	ldd	r17, Y+22	; 0x16
 24c:	8f 89       	ldd	r24, Y+23	; 0x17
 24e:	98 8d       	ldd	r25, Y+24	; 0x18
 250:	26 e0       	ldi	r18, 0x06	; 6
 252:	2c 83       	std	Y+4, r18	; 0x04
 254:	1a 83       	std	Y+2, r17	; 0x02
 256:	09 83       	std	Y+1, r16	; 0x01
 258:	97 ff       	sbrs	r25, 7
 25a:	02 c0       	rjmp	.+4      	; 0x260 <snprintf+0x24>
 25c:	80 e0       	ldi	r24, 0x00	; 0
 25e:	90 e8       	ldi	r25, 0x80	; 128
 260:	01 97       	sbiw	r24, 0x01	; 1
 262:	9e 83       	std	Y+6, r25	; 0x06
 264:	8d 83       	std	Y+5, r24	; 0x05
 266:	ae 01       	movw	r20, r28
 268:	45 5e       	subi	r20, 0xE5	; 229
 26a:	5f 4f       	sbci	r21, 0xFF	; 255
 26c:	69 8d       	ldd	r22, Y+25	; 0x19
 26e:	7a 8d       	ldd	r23, Y+26	; 0x1a
 270:	ce 01       	movw	r24, r28
 272:	01 96       	adiw	r24, 0x01	; 1
 274:	0e 94 4e 01 	call	0x29c	; 0x29c <vfprintf>
 278:	4d 81       	ldd	r20, Y+5	; 0x05
 27a:	5e 81       	ldd	r21, Y+6	; 0x06
 27c:	57 fd       	sbrc	r21, 7
 27e:	0a c0       	rjmp	.+20     	; 0x294 <snprintf+0x58>
 280:	2f 81       	ldd	r18, Y+7	; 0x07
 282:	38 85       	ldd	r19, Y+8	; 0x08
 284:	42 17       	cp	r20, r18
 286:	53 07       	cpc	r21, r19
 288:	0c f4       	brge	.+2      	; 0x28c <snprintf+0x50>
 28a:	9a 01       	movw	r18, r20
 28c:	f8 01       	movw	r30, r16
 28e:	e2 0f       	add	r30, r18
 290:	f3 1f       	adc	r31, r19
 292:	10 82       	st	Z, r1
 294:	2e 96       	adiw	r28, 0x0e	; 14
 296:	e4 e0       	ldi	r30, 0x04	; 4
 298:	0c 94 09 04 	jmp	0x812	; 0x812 <__DATA_REGION_LENGTH__+0x12>

0000029c <vfprintf>:
 29c:	ab e0       	ldi	r26, 0x0B	; 11
 29e:	b0 e0       	ldi	r27, 0x00	; 0
 2a0:	e4 e5       	ldi	r30, 0x54	; 84
 2a2:	f1 e0       	ldi	r31, 0x01	; 1
 2a4:	0c 94 df 03 	jmp	0x7be	; 0x7be <__prologue_saves__>
 2a8:	6c 01       	movw	r12, r24
 2aa:	7b 01       	movw	r14, r22
 2ac:	8a 01       	movw	r16, r20
 2ae:	fc 01       	movw	r30, r24
 2b0:	17 82       	std	Z+7, r1	; 0x07
 2b2:	16 82       	std	Z+6, r1	; 0x06
 2b4:	83 81       	ldd	r24, Z+3	; 0x03
 2b6:	81 ff       	sbrs	r24, 1
 2b8:	cc c1       	rjmp	.+920    	; 0x652 <__EEPROM_REGION_LENGTH__+0x252>
 2ba:	ce 01       	movw	r24, r28
 2bc:	01 96       	adiw	r24, 0x01	; 1
 2be:	3c 01       	movw	r6, r24
 2c0:	f6 01       	movw	r30, r12
 2c2:	93 81       	ldd	r25, Z+3	; 0x03
 2c4:	f7 01       	movw	r30, r14
 2c6:	93 fd       	sbrc	r25, 3
 2c8:	85 91       	lpm	r24, Z+
 2ca:	93 ff       	sbrs	r25, 3
 2cc:	81 91       	ld	r24, Z+
 2ce:	7f 01       	movw	r14, r30
 2d0:	88 23       	and	r24, r24
 2d2:	09 f4       	brne	.+2      	; 0x2d6 <vfprintf+0x3a>
 2d4:	ba c1       	rjmp	.+884    	; 0x64a <__EEPROM_REGION_LENGTH__+0x24a>
 2d6:	85 32       	cpi	r24, 0x25	; 37
 2d8:	39 f4       	brne	.+14     	; 0x2e8 <vfprintf+0x4c>
 2da:	93 fd       	sbrc	r25, 3
 2dc:	85 91       	lpm	r24, Z+
 2de:	93 ff       	sbrs	r25, 3
 2e0:	81 91       	ld	r24, Z+
 2e2:	7f 01       	movw	r14, r30
 2e4:	85 32       	cpi	r24, 0x25	; 37
 2e6:	29 f4       	brne	.+10     	; 0x2f2 <vfprintf+0x56>
 2e8:	b6 01       	movw	r22, r12
 2ea:	90 e0       	ldi	r25, 0x00	; 0
 2ec:	0e 94 45 03 	call	0x68a	; 0x68a <fputc>
 2f0:	e7 cf       	rjmp	.-50     	; 0x2c0 <vfprintf+0x24>
 2f2:	91 2c       	mov	r9, r1
 2f4:	21 2c       	mov	r2, r1
 2f6:	31 2c       	mov	r3, r1
 2f8:	ff e1       	ldi	r31, 0x1F	; 31
 2fa:	f3 15       	cp	r31, r3
 2fc:	d8 f0       	brcs	.+54     	; 0x334 <vfprintf+0x98>
 2fe:	8b 32       	cpi	r24, 0x2B	; 43
 300:	79 f0       	breq	.+30     	; 0x320 <vfprintf+0x84>
 302:	38 f4       	brcc	.+14     	; 0x312 <vfprintf+0x76>
 304:	80 32       	cpi	r24, 0x20	; 32
 306:	79 f0       	breq	.+30     	; 0x326 <vfprintf+0x8a>
 308:	83 32       	cpi	r24, 0x23	; 35
 30a:	a1 f4       	brne	.+40     	; 0x334 <vfprintf+0x98>
 30c:	23 2d       	mov	r18, r3
 30e:	20 61       	ori	r18, 0x10	; 16
 310:	1d c0       	rjmp	.+58     	; 0x34c <vfprintf+0xb0>
 312:	8d 32       	cpi	r24, 0x2D	; 45
 314:	61 f0       	breq	.+24     	; 0x32e <vfprintf+0x92>
 316:	80 33       	cpi	r24, 0x30	; 48
 318:	69 f4       	brne	.+26     	; 0x334 <vfprintf+0x98>
 31a:	23 2d       	mov	r18, r3
 31c:	21 60       	ori	r18, 0x01	; 1
 31e:	16 c0       	rjmp	.+44     	; 0x34c <vfprintf+0xb0>
 320:	83 2d       	mov	r24, r3
 322:	82 60       	ori	r24, 0x02	; 2
 324:	38 2e       	mov	r3, r24
 326:	e3 2d       	mov	r30, r3
 328:	e4 60       	ori	r30, 0x04	; 4
 32a:	3e 2e       	mov	r3, r30
 32c:	2a c0       	rjmp	.+84     	; 0x382 <vfprintf+0xe6>
 32e:	f3 2d       	mov	r31, r3
 330:	f8 60       	ori	r31, 0x08	; 8
 332:	1d c0       	rjmp	.+58     	; 0x36e <vfprintf+0xd2>
 334:	37 fc       	sbrc	r3, 7
 336:	2d c0       	rjmp	.+90     	; 0x392 <vfprintf+0xf6>
 338:	20 ed       	ldi	r18, 0xD0	; 208
 33a:	28 0f       	add	r18, r24
 33c:	2a 30       	cpi	r18, 0x0A	; 10
 33e:	40 f0       	brcs	.+16     	; 0x350 <vfprintf+0xb4>
 340:	8e 32       	cpi	r24, 0x2E	; 46
 342:	b9 f4       	brne	.+46     	; 0x372 <vfprintf+0xd6>
 344:	36 fc       	sbrc	r3, 6
 346:	81 c1       	rjmp	.+770    	; 0x64a <__EEPROM_REGION_LENGTH__+0x24a>
 348:	23 2d       	mov	r18, r3
 34a:	20 64       	ori	r18, 0x40	; 64
 34c:	32 2e       	mov	r3, r18
 34e:	19 c0       	rjmp	.+50     	; 0x382 <vfprintf+0xe6>
 350:	36 fe       	sbrs	r3, 6
 352:	06 c0       	rjmp	.+12     	; 0x360 <vfprintf+0xc4>
 354:	8a e0       	ldi	r24, 0x0A	; 10
 356:	98 9e       	mul	r9, r24
 358:	20 0d       	add	r18, r0
 35a:	11 24       	eor	r1, r1
 35c:	92 2e       	mov	r9, r18
 35e:	11 c0       	rjmp	.+34     	; 0x382 <vfprintf+0xe6>
 360:	ea e0       	ldi	r30, 0x0A	; 10
 362:	2e 9e       	mul	r2, r30
 364:	20 0d       	add	r18, r0
 366:	11 24       	eor	r1, r1
 368:	22 2e       	mov	r2, r18
 36a:	f3 2d       	mov	r31, r3
 36c:	f0 62       	ori	r31, 0x20	; 32
 36e:	3f 2e       	mov	r3, r31
 370:	08 c0       	rjmp	.+16     	; 0x382 <vfprintf+0xe6>
 372:	8c 36       	cpi	r24, 0x6C	; 108
 374:	21 f4       	brne	.+8      	; 0x37e <vfprintf+0xe2>
 376:	83 2d       	mov	r24, r3
 378:	80 68       	ori	r24, 0x80	; 128
 37a:	38 2e       	mov	r3, r24
 37c:	02 c0       	rjmp	.+4      	; 0x382 <vfprintf+0xe6>
 37e:	88 36       	cpi	r24, 0x68	; 104
 380:	41 f4       	brne	.+16     	; 0x392 <vfprintf+0xf6>
 382:	f7 01       	movw	r30, r14
 384:	93 fd       	sbrc	r25, 3
 386:	85 91       	lpm	r24, Z+
 388:	93 ff       	sbrs	r25, 3
 38a:	81 91       	ld	r24, Z+
 38c:	7f 01       	movw	r14, r30
 38e:	81 11       	cpse	r24, r1
 390:	b3 cf       	rjmp	.-154    	; 0x2f8 <vfprintf+0x5c>
 392:	98 2f       	mov	r25, r24
 394:	9f 7d       	andi	r25, 0xDF	; 223
 396:	95 54       	subi	r25, 0x45	; 69
 398:	93 30       	cpi	r25, 0x03	; 3
 39a:	28 f4       	brcc	.+10     	; 0x3a6 <vfprintf+0x10a>
 39c:	0c 5f       	subi	r16, 0xFC	; 252
 39e:	1f 4f       	sbci	r17, 0xFF	; 255
 3a0:	9f e3       	ldi	r25, 0x3F	; 63
 3a2:	99 83       	std	Y+1, r25	; 0x01
 3a4:	0d c0       	rjmp	.+26     	; 0x3c0 <vfprintf+0x124>
 3a6:	83 36       	cpi	r24, 0x63	; 99
 3a8:	31 f0       	breq	.+12     	; 0x3b6 <vfprintf+0x11a>
 3aa:	83 37       	cpi	r24, 0x73	; 115
 3ac:	71 f0       	breq	.+28     	; 0x3ca <vfprintf+0x12e>
 3ae:	83 35       	cpi	r24, 0x53	; 83
 3b0:	09 f0       	breq	.+2      	; 0x3b4 <vfprintf+0x118>
 3b2:	59 c0       	rjmp	.+178    	; 0x466 <__EEPROM_REGION_LENGTH__+0x66>
 3b4:	21 c0       	rjmp	.+66     	; 0x3f8 <vfprintf+0x15c>
 3b6:	f8 01       	movw	r30, r16
 3b8:	80 81       	ld	r24, Z
 3ba:	89 83       	std	Y+1, r24	; 0x01
 3bc:	0e 5f       	subi	r16, 0xFE	; 254
 3be:	1f 4f       	sbci	r17, 0xFF	; 255
 3c0:	88 24       	eor	r8, r8
 3c2:	83 94       	inc	r8
 3c4:	91 2c       	mov	r9, r1
 3c6:	53 01       	movw	r10, r6
 3c8:	13 c0       	rjmp	.+38     	; 0x3f0 <vfprintf+0x154>
 3ca:	28 01       	movw	r4, r16
 3cc:	f2 e0       	ldi	r31, 0x02	; 2
 3ce:	4f 0e       	add	r4, r31
 3d0:	51 1c       	adc	r5, r1
 3d2:	f8 01       	movw	r30, r16
 3d4:	a0 80       	ld	r10, Z
 3d6:	b1 80       	ldd	r11, Z+1	; 0x01
 3d8:	36 fe       	sbrs	r3, 6
 3da:	03 c0       	rjmp	.+6      	; 0x3e2 <vfprintf+0x146>
 3dc:	69 2d       	mov	r22, r9
 3de:	70 e0       	ldi	r23, 0x00	; 0
 3e0:	02 c0       	rjmp	.+4      	; 0x3e6 <vfprintf+0x14a>
 3e2:	6f ef       	ldi	r22, 0xFF	; 255
 3e4:	7f ef       	ldi	r23, 0xFF	; 255
 3e6:	c5 01       	movw	r24, r10
 3e8:	0e 94 3a 03 	call	0x674	; 0x674 <strnlen>
 3ec:	4c 01       	movw	r8, r24
 3ee:	82 01       	movw	r16, r4
 3f0:	f3 2d       	mov	r31, r3
 3f2:	ff 77       	andi	r31, 0x7F	; 127
 3f4:	3f 2e       	mov	r3, r31
 3f6:	16 c0       	rjmp	.+44     	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
 3f8:	28 01       	movw	r4, r16
 3fa:	22 e0       	ldi	r18, 0x02	; 2
 3fc:	42 0e       	add	r4, r18
 3fe:	51 1c       	adc	r5, r1
 400:	f8 01       	movw	r30, r16
 402:	a0 80       	ld	r10, Z
 404:	b1 80       	ldd	r11, Z+1	; 0x01
 406:	36 fe       	sbrs	r3, 6
 408:	03 c0       	rjmp	.+6      	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 40a:	69 2d       	mov	r22, r9
 40c:	70 e0       	ldi	r23, 0x00	; 0
 40e:	02 c0       	rjmp	.+4      	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
 410:	6f ef       	ldi	r22, 0xFF	; 255
 412:	7f ef       	ldi	r23, 0xFF	; 255
 414:	c5 01       	movw	r24, r10
 416:	0e 94 2f 03 	call	0x65e	; 0x65e <strnlen_P>
 41a:	4c 01       	movw	r8, r24
 41c:	f3 2d       	mov	r31, r3
 41e:	f0 68       	ori	r31, 0x80	; 128
 420:	3f 2e       	mov	r3, r31
 422:	82 01       	movw	r16, r4
 424:	33 fc       	sbrc	r3, 3
 426:	1b c0       	rjmp	.+54     	; 0x45e <__EEPROM_REGION_LENGTH__+0x5e>
 428:	82 2d       	mov	r24, r2
 42a:	90 e0       	ldi	r25, 0x00	; 0
 42c:	88 16       	cp	r8, r24
 42e:	99 06       	cpc	r9, r25
 430:	b0 f4       	brcc	.+44     	; 0x45e <__EEPROM_REGION_LENGTH__+0x5e>
 432:	b6 01       	movw	r22, r12
 434:	80 e2       	ldi	r24, 0x20	; 32
 436:	90 e0       	ldi	r25, 0x00	; 0
 438:	0e 94 45 03 	call	0x68a	; 0x68a <fputc>
 43c:	2a 94       	dec	r2
 43e:	f4 cf       	rjmp	.-24     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 440:	f5 01       	movw	r30, r10
 442:	37 fc       	sbrc	r3, 7
 444:	85 91       	lpm	r24, Z+
 446:	37 fe       	sbrs	r3, 7
 448:	81 91       	ld	r24, Z+
 44a:	5f 01       	movw	r10, r30
 44c:	b6 01       	movw	r22, r12
 44e:	90 e0       	ldi	r25, 0x00	; 0
 450:	0e 94 45 03 	call	0x68a	; 0x68a <fputc>
 454:	21 10       	cpse	r2, r1
 456:	2a 94       	dec	r2
 458:	21 e0       	ldi	r18, 0x01	; 1
 45a:	82 1a       	sub	r8, r18
 45c:	91 08       	sbc	r9, r1
 45e:	81 14       	cp	r8, r1
 460:	91 04       	cpc	r9, r1
 462:	71 f7       	brne	.-36     	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 464:	e8 c0       	rjmp	.+464    	; 0x636 <__EEPROM_REGION_LENGTH__+0x236>
 466:	84 36       	cpi	r24, 0x64	; 100
 468:	11 f0       	breq	.+4      	; 0x46e <__EEPROM_REGION_LENGTH__+0x6e>
 46a:	89 36       	cpi	r24, 0x69	; 105
 46c:	41 f5       	brne	.+80     	; 0x4be <__EEPROM_REGION_LENGTH__+0xbe>
 46e:	f8 01       	movw	r30, r16
 470:	37 fe       	sbrs	r3, 7
 472:	07 c0       	rjmp	.+14     	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
 474:	60 81       	ld	r22, Z
 476:	71 81       	ldd	r23, Z+1	; 0x01
 478:	82 81       	ldd	r24, Z+2	; 0x02
 47a:	93 81       	ldd	r25, Z+3	; 0x03
 47c:	0c 5f       	subi	r16, 0xFC	; 252
 47e:	1f 4f       	sbci	r17, 0xFF	; 255
 480:	08 c0       	rjmp	.+16     	; 0x492 <__EEPROM_REGION_LENGTH__+0x92>
 482:	60 81       	ld	r22, Z
 484:	71 81       	ldd	r23, Z+1	; 0x01
 486:	07 2e       	mov	r0, r23
 488:	00 0c       	add	r0, r0
 48a:	88 0b       	sbc	r24, r24
 48c:	99 0b       	sbc	r25, r25
 48e:	0e 5f       	subi	r16, 0xFE	; 254
 490:	1f 4f       	sbci	r17, 0xFF	; 255
 492:	f3 2d       	mov	r31, r3
 494:	ff 76       	andi	r31, 0x6F	; 111
 496:	3f 2e       	mov	r3, r31
 498:	97 ff       	sbrs	r25, 7
 49a:	09 c0       	rjmp	.+18     	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
 49c:	90 95       	com	r25
 49e:	80 95       	com	r24
 4a0:	70 95       	com	r23
 4a2:	61 95       	neg	r22
 4a4:	7f 4f       	sbci	r23, 0xFF	; 255
 4a6:	8f 4f       	sbci	r24, 0xFF	; 255
 4a8:	9f 4f       	sbci	r25, 0xFF	; 255
 4aa:	f0 68       	ori	r31, 0x80	; 128
 4ac:	3f 2e       	mov	r3, r31
 4ae:	2a e0       	ldi	r18, 0x0A	; 10
 4b0:	30 e0       	ldi	r19, 0x00	; 0
 4b2:	a3 01       	movw	r20, r6
 4b4:	0e 94 81 03 	call	0x702	; 0x702 <__ultoa_invert>
 4b8:	88 2e       	mov	r8, r24
 4ba:	86 18       	sub	r8, r6
 4bc:	45 c0       	rjmp	.+138    	; 0x548 <__EEPROM_REGION_LENGTH__+0x148>
 4be:	85 37       	cpi	r24, 0x75	; 117
 4c0:	31 f4       	brne	.+12     	; 0x4ce <__EEPROM_REGION_LENGTH__+0xce>
 4c2:	23 2d       	mov	r18, r3
 4c4:	2f 7e       	andi	r18, 0xEF	; 239
 4c6:	b2 2e       	mov	r11, r18
 4c8:	2a e0       	ldi	r18, 0x0A	; 10
 4ca:	30 e0       	ldi	r19, 0x00	; 0
 4cc:	25 c0       	rjmp	.+74     	; 0x518 <__EEPROM_REGION_LENGTH__+0x118>
 4ce:	93 2d       	mov	r25, r3
 4d0:	99 7f       	andi	r25, 0xF9	; 249
 4d2:	b9 2e       	mov	r11, r25
 4d4:	8f 36       	cpi	r24, 0x6F	; 111
 4d6:	c1 f0       	breq	.+48     	; 0x508 <__EEPROM_REGION_LENGTH__+0x108>
 4d8:	18 f4       	brcc	.+6      	; 0x4e0 <__EEPROM_REGION_LENGTH__+0xe0>
 4da:	88 35       	cpi	r24, 0x58	; 88
 4dc:	79 f0       	breq	.+30     	; 0x4fc <__EEPROM_REGION_LENGTH__+0xfc>
 4de:	b5 c0       	rjmp	.+362    	; 0x64a <__EEPROM_REGION_LENGTH__+0x24a>
 4e0:	80 37       	cpi	r24, 0x70	; 112
 4e2:	19 f0       	breq	.+6      	; 0x4ea <__EEPROM_REGION_LENGTH__+0xea>
 4e4:	88 37       	cpi	r24, 0x78	; 120
 4e6:	21 f0       	breq	.+8      	; 0x4f0 <__EEPROM_REGION_LENGTH__+0xf0>
 4e8:	b0 c0       	rjmp	.+352    	; 0x64a <__EEPROM_REGION_LENGTH__+0x24a>
 4ea:	e9 2f       	mov	r30, r25
 4ec:	e0 61       	ori	r30, 0x10	; 16
 4ee:	be 2e       	mov	r11, r30
 4f0:	b4 fe       	sbrs	r11, 4
 4f2:	0d c0       	rjmp	.+26     	; 0x50e <__EEPROM_REGION_LENGTH__+0x10e>
 4f4:	fb 2d       	mov	r31, r11
 4f6:	f4 60       	ori	r31, 0x04	; 4
 4f8:	bf 2e       	mov	r11, r31
 4fa:	09 c0       	rjmp	.+18     	; 0x50e <__EEPROM_REGION_LENGTH__+0x10e>
 4fc:	34 fe       	sbrs	r3, 4
 4fe:	0a c0       	rjmp	.+20     	; 0x514 <__EEPROM_REGION_LENGTH__+0x114>
 500:	29 2f       	mov	r18, r25
 502:	26 60       	ori	r18, 0x06	; 6
 504:	b2 2e       	mov	r11, r18
 506:	06 c0       	rjmp	.+12     	; 0x514 <__EEPROM_REGION_LENGTH__+0x114>
 508:	28 e0       	ldi	r18, 0x08	; 8
 50a:	30 e0       	ldi	r19, 0x00	; 0
 50c:	05 c0       	rjmp	.+10     	; 0x518 <__EEPROM_REGION_LENGTH__+0x118>
 50e:	20 e1       	ldi	r18, 0x10	; 16
 510:	30 e0       	ldi	r19, 0x00	; 0
 512:	02 c0       	rjmp	.+4      	; 0x518 <__EEPROM_REGION_LENGTH__+0x118>
 514:	20 e1       	ldi	r18, 0x10	; 16
 516:	32 e0       	ldi	r19, 0x02	; 2
 518:	f8 01       	movw	r30, r16
 51a:	b7 fe       	sbrs	r11, 7
 51c:	07 c0       	rjmp	.+14     	; 0x52c <__EEPROM_REGION_LENGTH__+0x12c>
 51e:	60 81       	ld	r22, Z
 520:	71 81       	ldd	r23, Z+1	; 0x01
 522:	82 81       	ldd	r24, Z+2	; 0x02
 524:	93 81       	ldd	r25, Z+3	; 0x03
 526:	0c 5f       	subi	r16, 0xFC	; 252
 528:	1f 4f       	sbci	r17, 0xFF	; 255
 52a:	06 c0       	rjmp	.+12     	; 0x538 <__EEPROM_REGION_LENGTH__+0x138>
 52c:	60 81       	ld	r22, Z
 52e:	71 81       	ldd	r23, Z+1	; 0x01
 530:	80 e0       	ldi	r24, 0x00	; 0
 532:	90 e0       	ldi	r25, 0x00	; 0
 534:	0e 5f       	subi	r16, 0xFE	; 254
 536:	1f 4f       	sbci	r17, 0xFF	; 255
 538:	a3 01       	movw	r20, r6
 53a:	0e 94 81 03 	call	0x702	; 0x702 <__ultoa_invert>
 53e:	88 2e       	mov	r8, r24
 540:	86 18       	sub	r8, r6
 542:	fb 2d       	mov	r31, r11
 544:	ff 77       	andi	r31, 0x7F	; 127
 546:	3f 2e       	mov	r3, r31
 548:	36 fe       	sbrs	r3, 6
 54a:	0d c0       	rjmp	.+26     	; 0x566 <__EEPROM_REGION_LENGTH__+0x166>
 54c:	23 2d       	mov	r18, r3
 54e:	2e 7f       	andi	r18, 0xFE	; 254
 550:	a2 2e       	mov	r10, r18
 552:	89 14       	cp	r8, r9
 554:	58 f4       	brcc	.+22     	; 0x56c <__EEPROM_REGION_LENGTH__+0x16c>
 556:	34 fe       	sbrs	r3, 4
 558:	0b c0       	rjmp	.+22     	; 0x570 <__EEPROM_REGION_LENGTH__+0x170>
 55a:	32 fc       	sbrc	r3, 2
 55c:	09 c0       	rjmp	.+18     	; 0x570 <__EEPROM_REGION_LENGTH__+0x170>
 55e:	83 2d       	mov	r24, r3
 560:	8e 7e       	andi	r24, 0xEE	; 238
 562:	a8 2e       	mov	r10, r24
 564:	05 c0       	rjmp	.+10     	; 0x570 <__EEPROM_REGION_LENGTH__+0x170>
 566:	b8 2c       	mov	r11, r8
 568:	a3 2c       	mov	r10, r3
 56a:	03 c0       	rjmp	.+6      	; 0x572 <__EEPROM_REGION_LENGTH__+0x172>
 56c:	b8 2c       	mov	r11, r8
 56e:	01 c0       	rjmp	.+2      	; 0x572 <__EEPROM_REGION_LENGTH__+0x172>
 570:	b9 2c       	mov	r11, r9
 572:	a4 fe       	sbrs	r10, 4
 574:	0f c0       	rjmp	.+30     	; 0x594 <__EEPROM_REGION_LENGTH__+0x194>
 576:	fe 01       	movw	r30, r28
 578:	e8 0d       	add	r30, r8
 57a:	f1 1d       	adc	r31, r1
 57c:	80 81       	ld	r24, Z
 57e:	80 33       	cpi	r24, 0x30	; 48
 580:	21 f4       	brne	.+8      	; 0x58a <__EEPROM_REGION_LENGTH__+0x18a>
 582:	9a 2d       	mov	r25, r10
 584:	99 7e       	andi	r25, 0xE9	; 233
 586:	a9 2e       	mov	r10, r25
 588:	09 c0       	rjmp	.+18     	; 0x59c <__EEPROM_REGION_LENGTH__+0x19c>
 58a:	a2 fe       	sbrs	r10, 2
 58c:	06 c0       	rjmp	.+12     	; 0x59a <__EEPROM_REGION_LENGTH__+0x19a>
 58e:	b3 94       	inc	r11
 590:	b3 94       	inc	r11
 592:	04 c0       	rjmp	.+8      	; 0x59c <__EEPROM_REGION_LENGTH__+0x19c>
 594:	8a 2d       	mov	r24, r10
 596:	86 78       	andi	r24, 0x86	; 134
 598:	09 f0       	breq	.+2      	; 0x59c <__EEPROM_REGION_LENGTH__+0x19c>
 59a:	b3 94       	inc	r11
 59c:	a3 fc       	sbrc	r10, 3
 59e:	11 c0       	rjmp	.+34     	; 0x5c2 <__EEPROM_REGION_LENGTH__+0x1c2>
 5a0:	a0 fe       	sbrs	r10, 0
 5a2:	06 c0       	rjmp	.+12     	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
 5a4:	b2 14       	cp	r11, r2
 5a6:	88 f4       	brcc	.+34     	; 0x5ca <__EEPROM_REGION_LENGTH__+0x1ca>
 5a8:	28 0c       	add	r2, r8
 5aa:	92 2c       	mov	r9, r2
 5ac:	9b 18       	sub	r9, r11
 5ae:	0e c0       	rjmp	.+28     	; 0x5cc <__EEPROM_REGION_LENGTH__+0x1cc>
 5b0:	b2 14       	cp	r11, r2
 5b2:	60 f4       	brcc	.+24     	; 0x5cc <__EEPROM_REGION_LENGTH__+0x1cc>
 5b4:	b6 01       	movw	r22, r12
 5b6:	80 e2       	ldi	r24, 0x20	; 32
 5b8:	90 e0       	ldi	r25, 0x00	; 0
 5ba:	0e 94 45 03 	call	0x68a	; 0x68a <fputc>
 5be:	b3 94       	inc	r11
 5c0:	f7 cf       	rjmp	.-18     	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
 5c2:	b2 14       	cp	r11, r2
 5c4:	18 f4       	brcc	.+6      	; 0x5cc <__EEPROM_REGION_LENGTH__+0x1cc>
 5c6:	2b 18       	sub	r2, r11
 5c8:	02 c0       	rjmp	.+4      	; 0x5ce <__EEPROM_REGION_LENGTH__+0x1ce>
 5ca:	98 2c       	mov	r9, r8
 5cc:	21 2c       	mov	r2, r1
 5ce:	a4 fe       	sbrs	r10, 4
 5d0:	10 c0       	rjmp	.+32     	; 0x5f2 <__EEPROM_REGION_LENGTH__+0x1f2>
 5d2:	b6 01       	movw	r22, r12
 5d4:	80 e3       	ldi	r24, 0x30	; 48
 5d6:	90 e0       	ldi	r25, 0x00	; 0
 5d8:	0e 94 45 03 	call	0x68a	; 0x68a <fputc>
 5dc:	a2 fe       	sbrs	r10, 2
 5de:	17 c0       	rjmp	.+46     	; 0x60e <__EEPROM_REGION_LENGTH__+0x20e>
 5e0:	a1 fc       	sbrc	r10, 1
 5e2:	03 c0       	rjmp	.+6      	; 0x5ea <__EEPROM_REGION_LENGTH__+0x1ea>
 5e4:	88 e7       	ldi	r24, 0x78	; 120
 5e6:	90 e0       	ldi	r25, 0x00	; 0
 5e8:	02 c0       	rjmp	.+4      	; 0x5ee <__EEPROM_REGION_LENGTH__+0x1ee>
 5ea:	88 e5       	ldi	r24, 0x58	; 88
 5ec:	90 e0       	ldi	r25, 0x00	; 0
 5ee:	b6 01       	movw	r22, r12
 5f0:	0c c0       	rjmp	.+24     	; 0x60a <__EEPROM_REGION_LENGTH__+0x20a>
 5f2:	8a 2d       	mov	r24, r10
 5f4:	86 78       	andi	r24, 0x86	; 134
 5f6:	59 f0       	breq	.+22     	; 0x60e <__EEPROM_REGION_LENGTH__+0x20e>
 5f8:	a1 fe       	sbrs	r10, 1
 5fa:	02 c0       	rjmp	.+4      	; 0x600 <__EEPROM_REGION_LENGTH__+0x200>
 5fc:	8b e2       	ldi	r24, 0x2B	; 43
 5fe:	01 c0       	rjmp	.+2      	; 0x602 <__EEPROM_REGION_LENGTH__+0x202>
 600:	80 e2       	ldi	r24, 0x20	; 32
 602:	a7 fc       	sbrc	r10, 7
 604:	8d e2       	ldi	r24, 0x2D	; 45
 606:	b6 01       	movw	r22, r12
 608:	90 e0       	ldi	r25, 0x00	; 0
 60a:	0e 94 45 03 	call	0x68a	; 0x68a <fputc>
 60e:	89 14       	cp	r8, r9
 610:	38 f4       	brcc	.+14     	; 0x620 <__EEPROM_REGION_LENGTH__+0x220>
 612:	b6 01       	movw	r22, r12
 614:	80 e3       	ldi	r24, 0x30	; 48
 616:	90 e0       	ldi	r25, 0x00	; 0
 618:	0e 94 45 03 	call	0x68a	; 0x68a <fputc>
 61c:	9a 94       	dec	r9
 61e:	f7 cf       	rjmp	.-18     	; 0x60e <__EEPROM_REGION_LENGTH__+0x20e>
 620:	8a 94       	dec	r8
 622:	f3 01       	movw	r30, r6
 624:	e8 0d       	add	r30, r8
 626:	f1 1d       	adc	r31, r1
 628:	80 81       	ld	r24, Z
 62a:	b6 01       	movw	r22, r12
 62c:	90 e0       	ldi	r25, 0x00	; 0
 62e:	0e 94 45 03 	call	0x68a	; 0x68a <fputc>
 632:	81 10       	cpse	r8, r1
 634:	f5 cf       	rjmp	.-22     	; 0x620 <__EEPROM_REGION_LENGTH__+0x220>
 636:	22 20       	and	r2, r2
 638:	09 f4       	brne	.+2      	; 0x63c <__EEPROM_REGION_LENGTH__+0x23c>
 63a:	42 ce       	rjmp	.-892    	; 0x2c0 <vfprintf+0x24>
 63c:	b6 01       	movw	r22, r12
 63e:	80 e2       	ldi	r24, 0x20	; 32
 640:	90 e0       	ldi	r25, 0x00	; 0
 642:	0e 94 45 03 	call	0x68a	; 0x68a <fputc>
 646:	2a 94       	dec	r2
 648:	f6 cf       	rjmp	.-20     	; 0x636 <__EEPROM_REGION_LENGTH__+0x236>
 64a:	f6 01       	movw	r30, r12
 64c:	86 81       	ldd	r24, Z+6	; 0x06
 64e:	97 81       	ldd	r25, Z+7	; 0x07
 650:	02 c0       	rjmp	.+4      	; 0x656 <__EEPROM_REGION_LENGTH__+0x256>
 652:	8f ef       	ldi	r24, 0xFF	; 255
 654:	9f ef       	ldi	r25, 0xFF	; 255
 656:	2b 96       	adiw	r28, 0x0b	; 11
 658:	e2 e1       	ldi	r30, 0x12	; 18
 65a:	0c 94 fb 03 	jmp	0x7f6	; 0x7f6 <__epilogue_restores__>

0000065e <strnlen_P>:
 65e:	fc 01       	movw	r30, r24
 660:	05 90       	lpm	r0, Z+
 662:	61 50       	subi	r22, 0x01	; 1
 664:	70 40       	sbci	r23, 0x00	; 0
 666:	01 10       	cpse	r0, r1
 668:	d8 f7       	brcc	.-10     	; 0x660 <strnlen_P+0x2>
 66a:	80 95       	com	r24
 66c:	90 95       	com	r25
 66e:	8e 0f       	add	r24, r30
 670:	9f 1f       	adc	r25, r31
 672:	08 95       	ret

00000674 <strnlen>:
 674:	fc 01       	movw	r30, r24
 676:	61 50       	subi	r22, 0x01	; 1
 678:	70 40       	sbci	r23, 0x00	; 0
 67a:	01 90       	ld	r0, Z+
 67c:	01 10       	cpse	r0, r1
 67e:	d8 f7       	brcc	.-10     	; 0x676 <strnlen+0x2>
 680:	80 95       	com	r24
 682:	90 95       	com	r25
 684:	8e 0f       	add	r24, r30
 686:	9f 1f       	adc	r25, r31
 688:	08 95       	ret

0000068a <fputc>:
 68a:	0f 93       	push	r16
 68c:	1f 93       	push	r17
 68e:	cf 93       	push	r28
 690:	df 93       	push	r29
 692:	fb 01       	movw	r30, r22
 694:	23 81       	ldd	r18, Z+3	; 0x03
 696:	21 fd       	sbrc	r18, 1
 698:	03 c0       	rjmp	.+6      	; 0x6a0 <fputc+0x16>
 69a:	8f ef       	ldi	r24, 0xFF	; 255
 69c:	9f ef       	ldi	r25, 0xFF	; 255
 69e:	2c c0       	rjmp	.+88     	; 0x6f8 <fputc+0x6e>
 6a0:	22 ff       	sbrs	r18, 2
 6a2:	16 c0       	rjmp	.+44     	; 0x6d0 <fputc+0x46>
 6a4:	46 81       	ldd	r20, Z+6	; 0x06
 6a6:	57 81       	ldd	r21, Z+7	; 0x07
 6a8:	24 81       	ldd	r18, Z+4	; 0x04
 6aa:	35 81       	ldd	r19, Z+5	; 0x05
 6ac:	42 17       	cp	r20, r18
 6ae:	53 07       	cpc	r21, r19
 6b0:	44 f4       	brge	.+16     	; 0x6c2 <fputc+0x38>
 6b2:	a0 81       	ld	r26, Z
 6b4:	b1 81       	ldd	r27, Z+1	; 0x01
 6b6:	9d 01       	movw	r18, r26
 6b8:	2f 5f       	subi	r18, 0xFF	; 255
 6ba:	3f 4f       	sbci	r19, 0xFF	; 255
 6bc:	31 83       	std	Z+1, r19	; 0x01
 6be:	20 83       	st	Z, r18
 6c0:	8c 93       	st	X, r24
 6c2:	26 81       	ldd	r18, Z+6	; 0x06
 6c4:	37 81       	ldd	r19, Z+7	; 0x07
 6c6:	2f 5f       	subi	r18, 0xFF	; 255
 6c8:	3f 4f       	sbci	r19, 0xFF	; 255
 6ca:	37 83       	std	Z+7, r19	; 0x07
 6cc:	26 83       	std	Z+6, r18	; 0x06
 6ce:	14 c0       	rjmp	.+40     	; 0x6f8 <fputc+0x6e>
 6d0:	8b 01       	movw	r16, r22
 6d2:	ec 01       	movw	r28, r24
 6d4:	fb 01       	movw	r30, r22
 6d6:	00 84       	ldd	r0, Z+8	; 0x08
 6d8:	f1 85       	ldd	r31, Z+9	; 0x09
 6da:	e0 2d       	mov	r30, r0
 6dc:	09 95       	icall
 6de:	89 2b       	or	r24, r25
 6e0:	e1 f6       	brne	.-72     	; 0x69a <fputc+0x10>
 6e2:	d8 01       	movw	r26, r16
 6e4:	16 96       	adiw	r26, 0x06	; 6
 6e6:	8d 91       	ld	r24, X+
 6e8:	9c 91       	ld	r25, X
 6ea:	17 97       	sbiw	r26, 0x07	; 7
 6ec:	01 96       	adiw	r24, 0x01	; 1
 6ee:	17 96       	adiw	r26, 0x07	; 7
 6f0:	9c 93       	st	X, r25
 6f2:	8e 93       	st	-X, r24
 6f4:	16 97       	sbiw	r26, 0x06	; 6
 6f6:	ce 01       	movw	r24, r28
 6f8:	df 91       	pop	r29
 6fa:	cf 91       	pop	r28
 6fc:	1f 91       	pop	r17
 6fe:	0f 91       	pop	r16
 700:	08 95       	ret

00000702 <__ultoa_invert>:
 702:	fa 01       	movw	r30, r20
 704:	aa 27       	eor	r26, r26
 706:	28 30       	cpi	r18, 0x08	; 8
 708:	51 f1       	breq	.+84     	; 0x75e <__ultoa_invert+0x5c>
 70a:	20 31       	cpi	r18, 0x10	; 16
 70c:	81 f1       	breq	.+96     	; 0x76e <__ultoa_invert+0x6c>
 70e:	e8 94       	clt
 710:	6f 93       	push	r22
 712:	6e 7f       	andi	r22, 0xFE	; 254
 714:	6e 5f       	subi	r22, 0xFE	; 254
 716:	7f 4f       	sbci	r23, 0xFF	; 255
 718:	8f 4f       	sbci	r24, 0xFF	; 255
 71a:	9f 4f       	sbci	r25, 0xFF	; 255
 71c:	af 4f       	sbci	r26, 0xFF	; 255
 71e:	b1 e0       	ldi	r27, 0x01	; 1
 720:	3e d0       	rcall	.+124    	; 0x79e <__ultoa_invert+0x9c>
 722:	b4 e0       	ldi	r27, 0x04	; 4
 724:	3c d0       	rcall	.+120    	; 0x79e <__ultoa_invert+0x9c>
 726:	67 0f       	add	r22, r23
 728:	78 1f       	adc	r23, r24
 72a:	89 1f       	adc	r24, r25
 72c:	9a 1f       	adc	r25, r26
 72e:	a1 1d       	adc	r26, r1
 730:	68 0f       	add	r22, r24
 732:	79 1f       	adc	r23, r25
 734:	8a 1f       	adc	r24, r26
 736:	91 1d       	adc	r25, r1
 738:	a1 1d       	adc	r26, r1
 73a:	6a 0f       	add	r22, r26
 73c:	71 1d       	adc	r23, r1
 73e:	81 1d       	adc	r24, r1
 740:	91 1d       	adc	r25, r1
 742:	a1 1d       	adc	r26, r1
 744:	20 d0       	rcall	.+64     	; 0x786 <__ultoa_invert+0x84>
 746:	09 f4       	brne	.+2      	; 0x74a <__ultoa_invert+0x48>
 748:	68 94       	set
 74a:	3f 91       	pop	r19
 74c:	2a e0       	ldi	r18, 0x0A	; 10
 74e:	26 9f       	mul	r18, r22
 750:	11 24       	eor	r1, r1
 752:	30 19       	sub	r19, r0
 754:	30 5d       	subi	r19, 0xD0	; 208
 756:	31 93       	st	Z+, r19
 758:	de f6       	brtc	.-74     	; 0x710 <__ultoa_invert+0xe>
 75a:	cf 01       	movw	r24, r30
 75c:	08 95       	ret
 75e:	46 2f       	mov	r20, r22
 760:	47 70       	andi	r20, 0x07	; 7
 762:	40 5d       	subi	r20, 0xD0	; 208
 764:	41 93       	st	Z+, r20
 766:	b3 e0       	ldi	r27, 0x03	; 3
 768:	0f d0       	rcall	.+30     	; 0x788 <__ultoa_invert+0x86>
 76a:	c9 f7       	brne	.-14     	; 0x75e <__ultoa_invert+0x5c>
 76c:	f6 cf       	rjmp	.-20     	; 0x75a <__ultoa_invert+0x58>
 76e:	46 2f       	mov	r20, r22
 770:	4f 70       	andi	r20, 0x0F	; 15
 772:	40 5d       	subi	r20, 0xD0	; 208
 774:	4a 33       	cpi	r20, 0x3A	; 58
 776:	18 f0       	brcs	.+6      	; 0x77e <__ultoa_invert+0x7c>
 778:	49 5d       	subi	r20, 0xD9	; 217
 77a:	31 fd       	sbrc	r19, 1
 77c:	40 52       	subi	r20, 0x20	; 32
 77e:	41 93       	st	Z+, r20
 780:	02 d0       	rcall	.+4      	; 0x786 <__ultoa_invert+0x84>
 782:	a9 f7       	brne	.-22     	; 0x76e <__ultoa_invert+0x6c>
 784:	ea cf       	rjmp	.-44     	; 0x75a <__ultoa_invert+0x58>
 786:	b4 e0       	ldi	r27, 0x04	; 4
 788:	a6 95       	lsr	r26
 78a:	97 95       	ror	r25
 78c:	87 95       	ror	r24
 78e:	77 95       	ror	r23
 790:	67 95       	ror	r22
 792:	ba 95       	dec	r27
 794:	c9 f7       	brne	.-14     	; 0x788 <__ultoa_invert+0x86>
 796:	00 97       	sbiw	r24, 0x00	; 0
 798:	61 05       	cpc	r22, r1
 79a:	71 05       	cpc	r23, r1
 79c:	08 95       	ret
 79e:	9b 01       	movw	r18, r22
 7a0:	ac 01       	movw	r20, r24
 7a2:	0a 2e       	mov	r0, r26
 7a4:	06 94       	lsr	r0
 7a6:	57 95       	ror	r21
 7a8:	47 95       	ror	r20
 7aa:	37 95       	ror	r19
 7ac:	27 95       	ror	r18
 7ae:	ba 95       	dec	r27
 7b0:	c9 f7       	brne	.-14     	; 0x7a4 <__ultoa_invert+0xa2>
 7b2:	62 0f       	add	r22, r18
 7b4:	73 1f       	adc	r23, r19
 7b6:	84 1f       	adc	r24, r20
 7b8:	95 1f       	adc	r25, r21
 7ba:	a0 1d       	adc	r26, r0
 7bc:	08 95       	ret

000007be <__prologue_saves__>:
 7be:	2f 92       	push	r2
 7c0:	3f 92       	push	r3
 7c2:	4f 92       	push	r4
 7c4:	5f 92       	push	r5
 7c6:	6f 92       	push	r6
 7c8:	7f 92       	push	r7
 7ca:	8f 92       	push	r8
 7cc:	9f 92       	push	r9
 7ce:	af 92       	push	r10
 7d0:	bf 92       	push	r11
 7d2:	cf 92       	push	r12
 7d4:	df 92       	push	r13
 7d6:	ef 92       	push	r14
 7d8:	ff 92       	push	r15
 7da:	0f 93       	push	r16
 7dc:	1f 93       	push	r17
 7de:	cf 93       	push	r28
 7e0:	df 93       	push	r29
 7e2:	cd b7       	in	r28, 0x3d	; 61
 7e4:	de b7       	in	r29, 0x3e	; 62
 7e6:	ca 1b       	sub	r28, r26
 7e8:	db 0b       	sbc	r29, r27
 7ea:	0f b6       	in	r0, 0x3f	; 63
 7ec:	f8 94       	cli
 7ee:	de bf       	out	0x3e, r29	; 62
 7f0:	0f be       	out	0x3f, r0	; 63
 7f2:	cd bf       	out	0x3d, r28	; 61
 7f4:	09 94       	ijmp

000007f6 <__epilogue_restores__>:
 7f6:	2a 88       	ldd	r2, Y+18	; 0x12
 7f8:	39 88       	ldd	r3, Y+17	; 0x11
 7fa:	48 88       	ldd	r4, Y+16	; 0x10
 7fc:	5f 84       	ldd	r5, Y+15	; 0x0f
 7fe:	6e 84       	ldd	r6, Y+14	; 0x0e
 800:	7d 84       	ldd	r7, Y+13	; 0x0d
 802:	8c 84       	ldd	r8, Y+12	; 0x0c
 804:	9b 84       	ldd	r9, Y+11	; 0x0b
 806:	aa 84       	ldd	r10, Y+10	; 0x0a
 808:	b9 84       	ldd	r11, Y+9	; 0x09
 80a:	c8 84       	ldd	r12, Y+8	; 0x08
 80c:	df 80       	ldd	r13, Y+7	; 0x07
 80e:	ee 80       	ldd	r14, Y+6	; 0x06
 810:	fd 80       	ldd	r15, Y+5	; 0x05
 812:	0c 81       	ldd	r16, Y+4	; 0x04
 814:	1b 81       	ldd	r17, Y+3	; 0x03
 816:	aa 81       	ldd	r26, Y+2	; 0x02
 818:	b9 81       	ldd	r27, Y+1	; 0x01
 81a:	ce 0f       	add	r28, r30
 81c:	d1 1d       	adc	r29, r1
 81e:	0f b6       	in	r0, 0x3f	; 63
 820:	f8 94       	cli
 822:	de bf       	out	0x3e, r29	; 62
 824:	0f be       	out	0x3f, r0	; 63
 826:	cd bf       	out	0x3d, r28	; 61
 828:	ed 01       	movw	r28, r26
 82a:	08 95       	ret

0000082c <_exit>:
 82c:	f8 94       	cli

0000082e <__stop_program>:
 82e:	ff cf       	rjmp	.-2      	; 0x82e <__stop_program>
